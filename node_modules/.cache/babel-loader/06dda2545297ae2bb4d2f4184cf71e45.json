{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar actionNames = exports.actionNames = {\n  SET_MEDIA: 'JPLAYER_SET_MEDIA',\n  CLEAR_MEDIA: 'JPLAYER_CLEAR_MEDIA',\n  PLAY: 'JPLAYER_PLAY',\n  PAUSE: 'JPLAYER_PAUSE',\n  PLAY_HEAD: 'JPLAYER_PLAY_HEAD',\n  VOLUME: 'JPLAYER_VOLUME',\n  MUTE: 'JPLAYER_MUTE',\n  FOCUS: 'JPLAYER_FOCUS',\n  SET_OPTION: 'JPLAYER_SET_JPLAYER_OPTION'\n};\nvar errors = exports.errors = {\n  FORMAT_NO_SUPPORT: 'It is not possible to play any media format ' + 'provided on this browser using your current defaultOptions.',\n  URL_NO_SUPPORT: 'The media URL could not be loaded.',\n  URL_NOT_SET: 'Attempted to issue media playback commands while no media url is set.',\n  INVALID_GLOBAL_METHOD: 'You passed an invalid jPlayer method to the global array'\n};\nvar hints = exports.hints = {\n  FORMAT_NO_SUPPORT: 'The browser may not support these file types.',\n  URL_NO_SUPPORT: 'Check the media URL is valid.',\n  URL_NOT_SET: 'Pass the media through the defaultOptions or use the setMedia() ' + 'action that is passed into the component props.',\n  INVALID_GLOBAL_METHOD: 'Remove the invalid method from the \"global\" option'\n};\nvar classes = exports.classes = {\n  MEDIA: 'jp-media',\n  JPLAYER: 'jp-jplayer',\n  MUTE: 'jp-mute',\n  DOWNLOAD: 'jp-download',\n  VOLUME_BAR: 'jp-volume-bar',\n  VOLUME_BAR_VALUE: 'jp-volume-bar-value',\n  PLAYBACK_RATE_BAR: 'jp-playback-rate-bar',\n  PLAYBACK_RATE_BAR_VALUE: 'jp-playback-rate-bar-value',\n  BUFFER_BAR: 'jp-buffer-bar',\n  PROGRESS: 'jp-progress',\n  SEEK_BAR: 'jp-seek-bar',\n  PLAY_BAR: 'jp-play-bar',\n  SEEKING: 'jp-seeking-bg',\n  GUI: 'jp-gui',\n  NO_BROWSER_SUPPORT: 'jp-no-browser-support',\n  PLAY: 'jp-play',\n  PAUSE: 'jp-pause',\n  STOP: 'jp-stop',\n  REPEAT: 'jp-repeat',\n  FULL_SCREEN: 'jp-full-screen',\n  CURRENT_TIME: 'jp-current-time',\n  DURATION: 'jp-duration',\n  DETAILS: 'jp-details',\n  TITLE: 'jp-title',\n  SHUFFLE: 'jp-shuffle',\n  PREVIOUS: 'jp-previous',\n  NEXT: 'jp-next',\n  POSTER: 'jp-poster',\n  states: {\n    AUDIO: 'jp-state-audio',\n    VIDEO: 'jp-state-video',\n    PLAYING: 'jp-state-playing',\n    IDLE: 'jp-state-idle',\n    SEEKING: 'jp-state-seeking',\n    MUTED: 'jp-state-muted',\n    VOLUME_LOW: 'jp-state-volume-low',\n    VOLUME_HIGH: 'jp-state-volume-high',\n    LOOPED: 'jp-state-looped',\n    FULL_SCREEN: 'jp-state-full-screen',\n    SHUFFLED: 'jp-state-shuffled',\n    NO_BROWSER_SUPPORT: 'jp-state-no-browser-support',\n    NO_VOLUME_SUPPORT: 'jp-state-no-volume-support'\n  }\n};\nvar keyIgnoredElementNames = exports.keyIgnoredElementNames = ['INPUT', 'TEXTAREA', 'SELECT'];\nvar formats = exports.formats = {\n  mp3: {\n    CODEC: 'audio/mpeg',\n    MEDIA: 'audio'\n  },\n  m4a: {\n    // AAC / MP4\n    CODEC: 'audio/mp4; codecs=\"mp4a.40.2\"',\n    MEDIA: 'audio'\n  },\n  m3u8a: {\n    // AAC / MP4 / Apple HLS\n    CODEC: 'application/vnd.apple.mpegurl; codecs=\"mp4a.40.2\"',\n    MEDIA: 'audio'\n  },\n  m3ua: {\n    // M3U\n    CODEC: 'audio/mpegurl',\n    MEDIA: 'audio'\n  },\n  oga: {\n    // OGG\n    CODEC: 'audio/ogg; codecs=\"vorbis, opus\"',\n    MEDIA: 'audio'\n  },\n  flac: {\n    // FLAC\n    CODEC: 'audio/x-flac',\n    MEDIA: 'audio'\n  },\n  wav: {\n    // PCM\n    CODEC: 'audio/wav; codecs=\"1\"',\n    MEDIA: 'audio'\n  },\n  webma: {\n    // WEBM\n    CODEC: 'audio/webm; codecs=\"vorbis\"',\n    MEDIA: 'audio'\n  },\n  fla: {\n    // FLV / F4A\n    CODEC: 'audio/x-flv',\n    MEDIA: 'audio'\n  },\n  rtmpa: {\n    // RTMP AUDIO\n    CODEC: 'audio/rtmp; codecs=\"rtmp\"',\n    MEDIA: 'audio'\n  },\n  m4v: {\n    // H.264 / MP4\n    CODEC: 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"',\n    MEDIA: 'video'\n  },\n  m3u8v: {\n    // H.264 / AAC / MP4 / Apple HLS\n    CODEC: 'application/vnd.apple.mpegurl; codecs=\"avc1.42E01E, mp4a.40.2\"',\n    MEDIA: 'video'\n  },\n  m3uv: {\n    // M3U\n    CODEC: 'audio/mpegurl',\n    MEDIA: 'video'\n  },\n  ogv: {\n    // OGG\n    CODEC: 'video/ogg; codecs=\"theora, vorbis\"',\n    MEDIA: 'video'\n  },\n  webmv: {\n    // WEBM\n    CODEC: 'video/webm; codecs=\"vorbis, vp8\"',\n    MEDIA: 'video'\n  },\n  flv: {\n    // FLV / F4V\n    CODEC: 'video/x-flv',\n    MEDIA: 'video'\n  },\n  rtmpv: {\n    // RTMP VIDEO\n    CODEC: 'video/rtmp; codecs=\"rtmp\"',\n    MEDIA: 'video'\n  }\n};\nvar defaultStatus = exports.defaultStatus = {\n  newTime: null,\n  // Needed to set a newTime as currentTime is auto updated by the audio\n  guiFadeOut: false,\n  playHeadPercent: 0,\n  mediaSettings: {\n    video: false,\n    nonSupported: false,\n    formats: []\n  },\n  paused: true,\n  seeking: false,\n  src: null,\n  currentTimeText: '0:00',\n  durationText: null,\n  seekPercent: 0,\n  currentPercentRelative: 0,\n  currentPercentAbsolute: 0,\n  currentTime: 0,\n  duration: 0,\n  bufferedTimeRanges: [],\n  focused: false\n};\nvar defaultOptions = exports.defaultOptions = {\n  preload: 'metadata',\n  minPlaybackRate: 0.5,\n  maxPlaybackRate: 4,\n  playbackRate: 1.0,\n  defaultPlaybackRate: 1.0,\n  bufferColour: '#ddd',\n  volume: 0.8,\n  barDrag: true,\n  pauseOthersOnPlay: true,\n  startGuiFadeOut: false,\n  guiFadeHoldTime: 2000,\n  media: {\n    sources: {},\n    tracks: [],\n    title: null,\n    artist: null,\n    poster: null,\n    free: false\n  },\n  keyBindings: {},\n  showRemainingDuration: false,\n  muted: false,\n  loop: false,\n  autoplay: false,\n  smoothPlayBar: false,\n  fullScreen: false,\n  verticalPlaybackRate: false,\n  verticalVolume: false,\n  keyEnabled: true,\n  timeFormats: {\n    showHour: false,\n    showMin: true,\n    showSec: true,\n    padHour: false,\n    padMin: true,\n    padSec: true,\n    sepHour: ':',\n    sepMin: ':',\n    sepSec: ''\n  }\n};","map":null,"metadata":{},"sourceType":"script"}