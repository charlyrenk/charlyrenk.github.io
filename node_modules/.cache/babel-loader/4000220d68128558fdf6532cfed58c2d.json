{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/products_dir/jbl_xtreme_2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/products_dir/jbl_xtreme_2/src/components/Partials/NavItem.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\tfont-family: 'cera_proregular';\\n\\tcolor: \", \"\\n\\t.black & {\\n\\t\\tcolor: \", \"\\n\\t}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tdisplay: inline-block;\\n\\tcursor: pointer;\\n\\ttext-decoration: none;\\n\\tfont-weight: bold;\\n\\tmargin: 5px 45px;\\n\\tline-height: 16px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Link from './Link';\nconst NavItem = styled(Link)(_templateObject());\nconst NavCopy = styled.div(_templateObject2(), props => props.active ? '#00aaf4' : '#455051', props => props.active ? '#00aaf4' : '#ffffff');\n\nclass navItem extends Component {\n  render() {\n    const isActive = this.props.active;\n    const iconColor = this.props.status;\n    let imgSrc = 'assets/images/' + this.props.type;\n\n    if (isActive) {\n      imgSrc += '_active.png';\n    } else {\n      if (iconColor === 'black') {\n        imgSrc += '_w.png';\n      } else if (iconColor === 'white') {\n        imgSrc += '_b.png';\n      }\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      to: '/' + this.props.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imgSrc,\n      alt: this.props.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(NavCopy, {\n      active: isActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.text)));\n  }\n\n}\n\nexport default navItem;","map":{"version":3,"sources":["/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/products_dir/jbl_xtreme_2/src/components/Partials/NavItem.js"],"names":["React","Component","Fragment","styled","Link","NavItem","NavCopy","div","props","active","navItem","render","isActive","iconColor","status","imgSrc","type","text"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACC,IAAD,CAAT,mBAAb;AASA,MAAME,OAAO,GAAGH,MAAM,CAACI,GAAV,qBAEHC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,SAAf,GAA2B,SAFjC,EAIFD,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,SAAf,GAA2B,SAJlC,CAAb;;AAQA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAE/BU,EAAAA,MAAM,GAAG;AACR,UAAMC,QAAQ,GAAG,KAAKJ,KAAL,CAAWC,MAA5B;AACA,UAAMI,SAAS,GAAG,KAAKL,KAAL,CAAWM,MAA7B;AACA,QAAIC,MAAM,GAAG,mBAAmB,KAAKP,KAAL,CAAWQ,IAA3C;;AAEA,QAAIJ,QAAJ,EAAc;AACbG,MAAAA,MAAM,IAAI,aAAV;AACA,KAFD,MAEO;AACN,UAAIF,SAAS,KAAK,OAAlB,EAA2B;AAC1BE,QAAAA,MAAM,IAAI,QAAV;AACA,OAFD,MAEO,IAAIF,SAAS,KAAK,OAAlB,EAA2B;AACjCE,QAAAA,MAAM,IAAI,QAAV;AACA;AACD;;AAED,WACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAE,MAAM,KAAKP,KAAL,CAAWQ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAED,MAAV;AAAkB,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWQ,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKJ,KAAL,CAAWS,IAAvC,CAFD,CADD,CADD;AAQA;;AAzB8B;;AA4BhC,eAAeP,OAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Link from './Link';\n\nconst NavItem = styled(Link)`\n\tdisplay: inline-block;\n\tcursor: pointer;\n\ttext-decoration: none;\n\tfont-weight: bold;\n\tmargin: 5px 45px;\n\tline-height: 16px;\n`;\n\nconst NavCopy = styled.div`\n\tfont-family: 'cera_proregular';\n\tcolor: ${props => props.active ? '#00aaf4' : '#455051'}\n\t.black & {\n\t\tcolor: ${props => props.active ? '#00aaf4' : '#ffffff'}\n\t}\n`;\n\nclass navItem extends Component {\n\n\trender() {\n\t\tconst isActive = this.props.active;\n\t\tconst iconColor = this.props.status;\n\t\tlet imgSrc = 'assets/images/' + this.props.type;\n\n\t\tif (isActive) {\n\t\t\timgSrc += '_active.png';\n\t\t} else {\n\t\t\tif (iconColor === 'black') {\n\t\t\t\timgSrc += '_w.png';\n\t\t\t} else if (iconColor === 'white') {\n\t\t\t\timgSrc += '_b.png';\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<NavItem to={'/' + this.props.type}>\n\t\t\t\t\t<img src={imgSrc} alt={this.props.type} />\n\t\t\t\t\t<NavCopy active={isActive}>{this.props.text}</NavCopy>\n\t\t\t\t</NavItem>\n\t\t\t</Fragment>\n\t\t)\n\t};\n}\n\nexport default navItem;"]},"metadata":{},"sourceType":"module"}