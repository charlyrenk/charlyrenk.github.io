{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/Partials/AudioButton.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\t::before {\\n\\t\\tcontent: '';\\n\\t\\tborder-radius: 40px;\\n\\t\\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\\n\\t\\tpadding: 32.5px 118px;\\n\\t\\ttop: -3px;\\n\\t\\tright: -3px;\\n\\t\\tposition: absolute;\\n\\t\\tz-index: -1;\\n\\t}\\n\\t:hover, :focus {\\n\\t\\tcolor: #ffffff;\\n\\t\\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\\n\\t\\toutline:0;\\n\\t}\\n\\tcolor: #00aaf4;\\n\\tfont-size: 23px;\\n\\tfont-family: cera_probold, Arial, Helvetica, sans-serif;\\n\\twidth: 230px;\\n\\tpadding: 15px 0px;\\n\\tborder-radius: 35px;\\n\\tborder: none;\\n\\tcursor: pointer;\\n\\tmargin: 0 22.5px 20px;\\n\\tposition: relative;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nconst Button = styled.button(_templateObject());\n\nclass AudioButton extends Component {\n  // constructor(props) {\n  // \tsuper(props);\n  // \tthis.state = { \n  // \t\tplay: false,\n  // \t};\n  // }\n  componentDidUpdate() {\n    this.audio.volume = this.props.volume;\n    console.log(this.props.volume);\n  }\n\n  render() {\n    if (this.props.playState) {\n      this.audio.pause();\n    } else {\n      this.audio.play();\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      className: \"audioPlayer\",\n      ref: audio => {\n        this.audio = audio;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.props.musicSrc,\n      type: \"audio/mpeg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \"Your browser does not support the audio element.\"), React.createElement(Button, {\n      onClick: this.props.clicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nexport default AudioButton;","map":{"version":3,"sources":["/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/Partials/AudioButton.js"],"names":["React","Component","Fragment","styled","Button","button","AudioButton","componentDidUpdate","audio","volume","props","console","log","render","playState","pause","play","musicSrc","clicked","text"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV,mBAAZ;;AA6BA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AACnC;AACA;AACA;AACA;AACA;AACA;AAEAM,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,KAAL,CAAWC,MAAX,GAAoB,KAAKC,KAAL,CAAWD,MAA/B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWD,MAAvB;AACA;;AAEDI,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACzB,WAAKN,KAAL,CAAWO,KAAX;AACA,KAFD,MAEO;AAEN,WAAKP,KAAL,CAAWQ,IAAX;AACA;;AACD,WAAQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,GAAG,EAAGR,KAAD,IAAW;AAAE,aAAKA,KAAL,GAAaA,KAAb;AAAoB,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWO,QAAxB;AAAkC,MAAA,IAAI,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,qDADO,EAKP,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKR,KAAL,CAAWS,IAAjD,CALO,CAAR;AAQA;;AA5BkC;;AA+BpC,eAAeb,WAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n\t::before {\n\t\tcontent: '';\n\t\tborder-radius: 40px;\n\t\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\n\t\tpadding: 32.5px 118px;\n\t\ttop: -3px;\n\t\tright: -3px;\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t}\n\t:hover, :focus {\n\t\tcolor: #ffffff;\n\t\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\n\t\toutline:0;\n\t}\n\tcolor: #00aaf4;\n\tfont-size: 23px;\n\tfont-family: cera_probold, Arial, Helvetica, sans-serif;\n\twidth: 230px;\n\tpadding: 15px 0px;\n\tborder-radius: 35px;\n\tborder: none;\n\tcursor: pointer;\n\tmargin: 0 22.5px 20px;\n\tposition: relative;\n`;\n\n\nclass AudioButton extends Component {\n\t// constructor(props) {\n\t// \tsuper(props);\n\t// \tthis.state = { \n\t// \t\tplay: false,\n\t// \t};\n\t// }\n\n\tcomponentDidUpdate() {\n\t\tthis.audio.volume = this.props.volume;\n\t\tconsole.log(this.props.volume);\n\t}\n\t\n\trender() {\n\t\tif (this.props.playState) {\n\t\t\tthis.audio.pause();\n\t\t} else {\n\n\t\t\tthis.audio.play();\n\t\t}\n\t\treturn (<Fragment>\n\t\t\t<audio className=\"audioPlayer\" ref={(audio) => { this.audio = audio }}>\n\t\t\t\t<source src={this.props.musicSrc} type=\"audio/mpeg\" />\n\t\t\t\tYour browser does not support the audio element.\n\t\t\t</audio>\n\t\t\t<Button onClick={this.props.clicked}>{this.props.text}</Button>\n\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default AudioButton;"]},"metadata":{},"sourceType":"module"}