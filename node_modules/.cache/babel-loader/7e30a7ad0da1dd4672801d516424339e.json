{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/Partials/AudioButton.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\t::before {\\n\\t\\tcontent: '';\\n\\t\\tborder-radius: 40px;\\n\\t\\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\\n\\t\\tpadding: 32.5px 118px;\\n\\t\\ttop: -3px;\\n\\t\\tright: -3px;\\n\\t\\tposition: absolute;\\n\\t\\tz-index: -1;\\n\\t}\\n\\t:hover, :focus {\\n\\t\\tcolor: #ffffff;\\n\\t\\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\\n\\t\\toutline:0;\\n\\t}\\n\\tcolor: #00aaf4;\\n\\tfont-size: 23px;\\n\\tfont-family: cera_probold, Arial, Helvetica, sans-serif;\\n\\twidth: 230px;\\n\\tpadding: 15px 0px;\\n\\tborder-radius: 35px;\\n\\tborder: none;\\n\\tcursor: pointer;\\n\\tmargin: 0 22.5px 20px;\\n\\tposition: relative;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nconst Button = styled.button(_templateObject());\n\nclass AudioButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.play = () => {\n      if (this.state.play) {\n        this.setState({\n          play: false\n        });\n        this.audio.pause();\n      } else {\n        this.setState({\n          play: true\n        });\n        this.audio.play();\n      }\n    };\n\n    this.setVolume = val => {\n      let player = document.getElementsByClassName(\"audioPlayer\");\n      console.log('Before: ' + player.volume);\n      player.volume = val / 100;\n      console.log('After: ' + player.volume);\n    };\n\n    this.state = {\n      play: false\n    };\n  } // Toggled play state\n\n\n  componentWillReceiveProps() {\n    this.setState({\n      play: true\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      ref: audio => {\n        this.audio = audio;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.props.musicSrc,\n      type: \"audio/mpeg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Your browser does not support the audio element.\"), React.createElement(Button, {\n      onClick: this.play,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.text), React.createElement(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n      oninput: this.setVolume(0),\n      onchange: setVolume(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AudioButton;","map":{"version":3,"sources":["/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/Partials/AudioButton.js"],"names":["React","Component","Fragment","styled","Button","button","AudioButton","constructor","props","play","state","setState","audio","pause","setVolume","val","player","document","getElementsByClassName","console","log","volume","componentWillReceiveProps","render","musicSrc","text"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV,mBAAZ;;AA4BA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAKnBC,IALmB,GAKZ,MAAM;AACZ,UAAI,KAAKC,KAAL,CAAWD,IAAf,EAAqB;AACpB,aAAKE,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAd;AACA,aAAKG,KAAL,CAAWC,KAAX;AACA,OAHD,MAGO;AACN,aAAKF,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAd;AACA,aAAKG,KAAL,CAAWH,IAAX;AACA;AACD,KAbkB;;AAAA,SAelBK,SAfkB,GAeLC,GAAD,IACb;AACA,UAAIC,MAAM,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAb;AACGC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaJ,MAAM,CAACK,MAAhC;AACAL,MAAAA,MAAM,CAACK,MAAP,GAAgBN,GAAG,GAAG,GAAtB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,MAAM,CAACK,MAA/B;AACF,KArBkB;;AAElB,SAAKX,KAAL,GAAa;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAb;AACA,GAJkC,CAKnC;;;AAmBAa,EAAAA,yBAAyB,GAAG;AAC3B,SAAKX,QAAL,CAAc;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAd;AACA;;AAEDc,EAAAA,MAAM,GAAG;AACR,WAAQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAO,MAAA,GAAG,EAAGX,KAAD,IAAW;AAAE,aAAKA,KAAL,GAAaA,KAAb;AAAoB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWgB,QAAxB;AAAkC,MAAA,IAAI,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,qDADO,EAKP,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKf,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKD,KAAL,CAAWiB,IAAxC,CALO,EAMP;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAC,GAAxB;AAA4B,MAAA,GAAG,EAAC,KAAhC;AAAsC,MAAA,IAAI,EAAC,GAA3C;AAA+C,MAAA,OAAO,EAAE,KAAKX,SAAL,CAAe,CAAf,CAAxD;AAA2E,MAAA,QAAQ,EAAEA,SAAS,CAAC,CAAD,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANO,CAAR;AASA;;AAtCkC;;AAyCpC,eAAeR,WAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n\t::before {\n\t\tcontent: '';\n\t\tborder-radius: 40px;\n\t\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\n\t\tpadding: 32.5px 118px;\n\t\ttop: -3px;\n\t\tright: -3px;\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t}\n\t:hover, :focus {\n\t\tcolor: #ffffff;\n\t\tbackground-image: linear-gradient(135deg, #00aaf4 , #00d258);\n\t\toutline:0;\n\t}\n\tcolor: #00aaf4;\n\tfont-size: 23px;\n\tfont-family: cera_probold, Arial, Helvetica, sans-serif;\n\twidth: 230px;\n\tpadding: 15px 0px;\n\tborder-radius: 35px;\n\tborder: none;\n\tcursor: pointer;\n\tmargin: 0 22.5px 20px;\n\tposition: relative;\n`;\n\nclass AudioButton extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { play: false };\n\t}\n\t// Toggled play state\n\tplay = () => {\n\t\tif (this.state.play) {\n\t\t\tthis.setState({ play: false });\n\t\t\tthis.audio.pause();\n\t\t} else {\n\t\t\tthis.setState({ play: true });\n\t\t\tthis.audio.play();\n\t\t}\n\t}\n\n\t setVolume = (val) =>\n\t{\n\tlet player = document.getElementsByClassName(\"audioPlayer\");\n    console.log('Before: ' + player.volume);\n    player.volume = val / 100;\n    console.log('After: ' + player.volume);\n\t}\n\n\tcomponentWillReceiveProps() {\n\t\tthis.setState({ play: true });\n\t}\n\n\trender() {\n\t\treturn (<Fragment>\n\t\t\t<audio ref={(audio) => { this.audio = audio }}>\n\t\t\t\t<source src={this.props.musicSrc} type=\"audio/mpeg\" />\n\t\t\t\tYour browser does not support the audio element.\n\t\t\t</audio>\n\t\t\t<Button onClick={this.play}>{this.props.text}</Button>\n\t\t\t<input type=\"range\" min=\"0\" max=\"100\" step=\"1\" oninput={this.setVolume(0)} onchange={setVolume(0)}></input>\n\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default AudioButton;"]},"metadata":{},"sourceType":"module"}