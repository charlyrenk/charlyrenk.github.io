{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/containers/Main/Main.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  text-align: center;\\n  color: palevioletred;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nconst Title = styled.h1(_templateObject());\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  // Handlers go here \n  // END Handlers\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Cox \"));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/containers/Main/Main.js"],"names":["React","Component","Fragment","styled","Title","h1","Main","state","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,EAAV,mBAAX;;AAMA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB,EADoB;AAAA;;AAI5B;AACA;AAEAC,EAAAA,MAAM,GAAI;AACT,WACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CADD;AAKA;;AAb2B;;AAgB7B,eAAeF,IAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nclass Main extends Component {\n\tstate = {\n\n\t}\n\t// Handlers go here \n\t// END Handlers\n\n\trender () {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Title>Cox </Title>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}