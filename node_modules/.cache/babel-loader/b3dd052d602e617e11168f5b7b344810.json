{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactJplayerUtils = require('react-jplayer-utils');\n\nvar _recompose = require('recompose');\n\nvar _bar = require('./bar');\n\nvar _bar2 = _interopRequireDefault(_bar);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(_ref, _ref2) {\n  var jPlayers = _ref.jPlayers;\n  var id = _ref2.id;\n  return {\n    barDrag: jPlayers[id].barDrag\n  };\n};\n\nvar handlers = function handlers() {\n  var bar = void 0;\n  var dragging = void 0;\n  return {\n    setBar: function setBar() {\n      return function (ref) {\n        bar = ref;\n      };\n    },\n    onClick: function onClick(props) {\n      return function (e) {\n        return props.clickMoveBar(bar, e);\n      };\n    },\n    onTouchStart: function onTouchStart() {\n      return function () {\n        dragging = true;\n      };\n    },\n    onTouchMove: function onTouchMove(props) {\n      return function (e) {\n        if (props.barDrag && dragging) {\n          props.touchMoveBar(bar, e);\n        }\n      };\n    },\n    onTouchEnd: function onTouchEnd() {\n      return function () {\n        dragging = false;\n      };\n    },\n    onMouseMove: function onMouseMove(props) {\n      return function (e) {\n        if (props.barDrag && dragging) {\n          props.clickMoveBar(bar, e);\n        }\n      };\n    },\n    onMouseDown: function onMouseDown() {\n      return function () {\n        dragging = true;\n      };\n    },\n    onMouseUp: function onMouseUp() {\n      return function () {\n        dragging = false;\n      };\n    }\n  };\n};\n\nvar lifecycle = {\n  componentDidMount: function componentDidMount() {\n    document.addEventListener('mouseup', this.props.onMouseUp);\n    document.addEventListener('mousemove', this.props.onMouseMove);\n    document.addEventListener('touchmove', this.props.onTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', this.props.onTouchEnd);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    document.removeEventListener('mouseup', this.props.onMouseUp);\n    document.removeEventListener('mousemove', this.props.onMouseMove);\n    document.removeEventListener('touchmove', this.props.onTouchMove);\n    document.removeEventListener('touchend', this.props.onTouchEnd);\n  }\n};\nexports.default = (0, _recompose.compose)((0, _reactJplayerUtils.connectWithId)(mapStateToProps), (0, _recompose.withHandlers)(handlers), (0, _recompose.lifecycle)(lifecycle))(_bar2.default);","map":null,"metadata":{},"sourceType":"script"}