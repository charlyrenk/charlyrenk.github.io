{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/AudioPlayer.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tfloat: left; \\n\\tposition: relative; \\n\\tleft: 15px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nconst Small = styled.small(_templateObject());\n\nconst audioPlayer = () => React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"audio\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"source\", {\n  src: \"track.mp3\",\n  type: \"audio/mpeg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n})));\n\nexport default audioPlayer;","map":{"version":3,"sources":["/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/AudioPlayer.js"],"names":["React","Fragment","styled","Small","small","audioPlayer"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAV,mBAAX;;AAOA,MAAMC,WAAW,GAAG,MACnB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAQ,EAAA,GAAG,EAAC,WAAZ;AAAwB,EAAA,IAAI,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADD,CADD;;AAQA,eAAeA,WAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport styled from 'styled-components';\n\nconst Small = styled.small`\n\tfloat: left; \n\tposition: relative; \n\tleft: 15px;\n`;\n\n\nconst audioPlayer = () => (\n\t<Fragment>\n\t\t<audio>\n\t\t<source src=\"track.mp3\" type=\"audio/mpeg\" />\n\t\t</audio>\n\t</Fragment>\n)\n\nexport default audioPlayer;\n"]},"metadata":{},"sourceType":"module"}