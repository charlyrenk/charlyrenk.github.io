{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _recompose = require('recompose');\n\nvar _reactJplayerUtils = require('react-jplayer-utils');\n\nvar _bufferBar = require('./bufferBar');\n\nvar _bufferBar2 = _interopRequireDefault(_bufferBar);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(_ref, _ref2) {\n  var jPlayers = _ref.jPlayers;\n  var id = _ref2.id;\n  return {\n    bufferedTimeRanges: jPlayers[id].bufferedTimeRanges,\n    duration: jPlayers[id].duration,\n    bufferColour: jPlayers[id].bufferColour\n  };\n};\n\nvar handlers = function handlers() {\n  var canvas = void 0;\n  return {\n    setCanvas: function setCanvas() {\n      return function (ref) {\n        canvas = ref;\n      };\n    },\n    clearBuffer: function clearBuffer() {\n      return function () {\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n      };\n    },\n    fillBufferPartially: function fillBufferPartially(props) {\n      return function () {\n        var modifier = canvas.width / props.duration;\n        var context = canvas.getContext('2d');\n        props.bufferedTimeRanges.forEach(function (bufferedTimeRange) {\n          var startX = bufferedTimeRange.start * modifier;\n          var endX = bufferedTimeRange.end * modifier;\n          var width = endX - startX;\n          context.fillStyle = props.bufferColour;\n          context.fillRect(startX, 0, width, canvas.height);\n        });\n      };\n    }\n  };\n};\n\nvar lifecycle = {\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    if (prevProps.bufferedTimeRanges !== this.props.bufferedTimeRanges) {\n      if (this.props.bufferedTimeRanges.length === 0) {\n        this.props.clearBuffer();\n      }\n\n      this.props.fillBufferPartially();\n    }\n  }\n};\nexports.default = (0, _recompose.compose)((0, _reactJplayerUtils.connectWithId)(mapStateToProps), (0, _recompose.withHandlers)(handlers), (0, _recompose.lifecycle)(lifecycle))(_bufferBar2.default);","map":null,"metadata":{},"sourceType":"script"}