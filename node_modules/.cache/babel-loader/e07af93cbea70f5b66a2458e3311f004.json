{"ast":null,"code":"import _objectSpread from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/Partials/ReactCompareImage.jsx\";\nimport { ResizeSensor } from 'css-element-queries';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nconst propTypes = {\n  handleSize: PropTypes.number,\n  handle: PropTypes.node,\n  hover: PropTypes.bool,\n  leftImage: PropTypes.string.isRequired,\n  leftImageAlt: PropTypes.string,\n  leftImageCss: PropTypes.object,\n  // eslint-disable-line\n  leftImageLabel: PropTypes.string,\n  onSliderPositionChange: PropTypes.func,\n  rightImage: PropTypes.string.isRequired,\n  rightImageAlt: PropTypes.string,\n  rightImageCss: PropTypes.object,\n  // eslint-disable-line\n  rightImageLabel: PropTypes.string,\n  skeleton: PropTypes.element,\n  sliderLineColor: PropTypes.string,\n  sliderLineWidth: PropTypes.number,\n  sliderPositionPercentage: PropTypes.number\n};\nconst defaultProps = {\n  handleSize: 40,\n  handle: null,\n  hover: false,\n  leftImageAlt: '',\n  leftImageCss: {},\n  leftImageLabel: null,\n  onSliderPositionChange: () => {},\n  rightImageAlt: '',\n  rightImageCss: {},\n  rightImageLabel: null,\n  skeleton: null,\n  sliderLineColor: '#ffffff',\n  sliderLineWidth: 2,\n  sliderPositionPercentage: 0.5\n};\n\nfunction ReactCompareImage(props) {\n  const handleSize = props.handleSize,\n        handle = props.handle,\n        hover = props.hover,\n        leftImage = props.leftImage,\n        leftImageAlt = props.leftImageAlt,\n        leftImageCss = props.leftImageCss,\n        leftImageLabel = props.leftImageLabel,\n        onSliderPositionChange = props.onSliderPositionChange,\n        rightImage = props.rightImage,\n        rightImageAlt = props.rightImageAlt,\n        rightImageCss = props.rightImageCss,\n        rightImageLabel = props.rightImageLabel,\n        skeleton = props.skeleton,\n        sliderLineColor = props.sliderLineColor,\n        sliderLineWidth = props.sliderLineWidth,\n        sliderPositionPercentage = props.sliderPositionPercentage; // 0 to 1\n\n  const _useState = useState(sliderPositionPercentage),\n        _useState2 = _slicedToArray(_useState, 2),\n        sliderPosition = _useState2[0],\n        setSliderPosition = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        canvasWidth = _useState4[0],\n        setCanvasWidth = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        leftImgLoaded = _useState6[0],\n        setLeftImgLoaded = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        rightImgLoaded = _useState8[0],\n        setRightImgLoaded = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isSliding = _useState10[0],\n        setIsSliding = _useState10[1];\n\n  const containerRef = useRef();\n  const rightImageRef = useRef();\n  const leftImageRef = useRef();\n  useEffect(() => {\n    // when the left image source is changed\n    setLeftImgLoaded(false);\n    setCanvasWidth(0); // consider the case where loading image is completed immediately\n    // due to the cache etc.\n\n    const alreadyDone = leftImageRef.current.complete;\n    alreadyDone && setLeftImgLoaded(true);\n  }, [leftImage]);\n  useEffect(() => {\n    // when the right image source is changed\n    setRightImgLoaded(false);\n    setCanvasWidth(0); // consider the case where loading image is completed immediately\n    // due to the cache etc.\n\n    const alreadyDone = rightImageRef.current.complete;\n    alreadyDone && setRightImgLoaded(true);\n  }, [rightImage]);\n\n  function getCanvasWidth() {\n    // Image size set as follows.\n    //\n    // 1. right(under) image:\n    //     width  = 100% of container width\n    //     height = auto\n    //\n    // 2. left(over) imaze:\n    //     width  = 100% of container width\n    //     height = right image's height\n    //              (protrudes is hidden by css 'object-fit: hidden')\n    setCanvasWidth(rightImageRef.current.getBoundingClientRect().width);\n  }\n\n  useEffect(() => {\n    // re-calculate canvas size when container element size is changed\n    const containerElement = containerRef.current;\n    const resizeSensor = new ResizeSensor(containerElement, () => {\n      getCanvasWidth();\n    });\n    return () => {\n      resizeSensor.detach(containerElement);\n    };\n  }, []);\n  useEffect(() => {\n    if (leftImgLoaded && rightImgLoaded) {\n      getCanvasWidth();\n    }\n  }, [leftImgLoaded, rightImgLoaded]);\n\n  function handleSliding(event) {\n    if (!isSliding) setIsSliding(true);\n    const e = event || window.event; // Calc Cursor Position from the left edge of the viewport\n\n    const cursorXfromViewport = e.touches ? e.touches[0].pageX : e.pageX; // Calc Cursor Position from the left edge of the window (consider any page scrolling)\n\n    const cursorXfromWindow = cursorXfromViewport - window.pageXOffset; // Calc Cursor Position from the left edge of the image\n\n    const imagePosition = rightImageRef.current.getBoundingClientRect();\n    let pos = cursorXfromWindow - imagePosition.left; // Set minimum and maximum values to prevent the slider from overflowing\n\n    const minPos = 0 + sliderLineWidth / 2;\n    const maxPos = canvasWidth - sliderLineWidth / 2;\n    if (pos < minPos) pos = minPos;\n    if (pos > maxPos) pos = maxPos;\n    setSliderPosition(pos / canvasWidth); // If there's a callback function, invoke it everytime the slider changes\n\n    if (onSliderPositionChange) {\n      onSliderPositionChange(pos / canvasWidth);\n    }\n  }\n\n  function startSliding(e) {\n    // Prevent default behavior other than mobile scrolling\n    if (!('touches' in e)) {\n      e.preventDefault();\n    } // Slide the image even if you just click or tap (not drag)\n\n\n    handleSliding(e);\n    window.addEventListener('mousemove', handleSliding); // 07\n\n    window.addEventListener('touchmove', handleSliding); // 08\n  }\n\n  function finishSliding() {\n    setIsSliding(false);\n    window.removeEventListener('mousemove', handleSliding);\n    window.removeEventListener('touchmove', handleSliding);\n  }\n\n  useEffect(() => {\n    const containerElement = containerRef.current;\n\n    if (leftImgLoaded && rightImgLoaded && canvasWidth) {\n      // it's necessary to reset event handlers each time the canvasWidth changes\n      // for mobile\n      containerElement.addEventListener('touchstart', startSliding); // 01\n\n      window.addEventListener('touchend', finishSliding); // 02\n      // for desktop\n\n      if (hover) {\n        containerElement.addEventListener('mousemove', handleSliding); // 03\n\n        containerElement.addEventListener('mouseleave', finishSliding); // 04\n      } else {\n        containerElement.addEventListener('mousedown', startSliding); // 05\n\n        window.addEventListener('mouseup', finishSliding); // 06\n      }\n    }\n\n    return () => {\n      // cleanup all event resteners\n      containerElement.removeEventListener('touchstart', startSliding); // 01\n\n      window.removeEventListener('touchend', finishSliding); // 02\n\n      containerElement.removeEventListener('mousemove', handleSliding); // 03\n\n      containerElement.removeEventListener('mouseleave', finishSliding); // 04\n\n      containerElement.removeEventListener('mousedown', startSliding); // 05\n\n      window.removeEventListener('mouseup', finishSliding); // 06\n\n      window.removeEventListener('mousemove', handleSliding); // 07\n\n      window.removeEventListener('touchmove', handleSliding); // 08\n    };\n  }, [leftImgLoaded, rightImgLoaded, canvasWidth]); // eslint-disable-line\n\n  const styles = {\n    container: {\n      boxSizing: 'border-box',\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden'\n    },\n    rightImage: _objectSpread({\n      display: 'block',\n      height: 'auto',\n      // Respect the aspect ratio\n      width: '100%'\n    }, rightImageCss),\n    leftImage: _objectSpread({\n      clip: \"rect(auto, \".concat(canvasWidth * sliderPosition, \"px, auto, auto)\"),\n      display: 'block',\n      height: '100%',\n      // fit to the height of right(under) image\n      objectFit: 'cover',\n      // protrudes is hidden\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    }, leftImageCss),\n    slider: {\n      alignItems: 'center',\n      cursor: !hover && 'ew-resize',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      justifyContent: 'center',\n      left: \"\".concat(canvasWidth * sliderPosition - handleSize / 2, \"px\"),\n      position: 'absolute',\n      top: 0,\n      width: \"\".concat(handleSize, \"px\")\n    },\n    line1: {\n      background: 'linear-gradient(#00aaf4, #00bea4)',\n      flex: '0 1 auto',\n      height: '100%',\n      width: '1px'\n    },\n    line2: {\n      background: 'linear-gradient(#00bea4, #00d258)',\n      flex: '0 1 auto',\n      height: '100%',\n      width: '1px'\n    },\n    handleCustom: {\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: '1 0 auto',\n      height: 'auto',\n      justifyContent: 'center',\n      width: 'auto'\n    },\n    handleDefault: {\n      alignItems: 'center',\n      borderRadius: '100%',\n      background: 'linear-gradient(135deg, #00aaf4 , #00d258)',\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: '1 0 auto',\n      height: \"\".concat(handleSize, \"px\"),\n      justifyContent: 'center',\n      width: \"\".concat(handleSize, \"px\")\n    },\n    leftArrow: {\n      border: \"inset \".concat(handleSize * 0.15, \"px rgba(0,0,0,0)\"),\n      borderRight: \"\".concat(handleSize * 0.15, \"px solid \").concat(sliderLineColor),\n      height: '0px',\n      marginLeft: \"-\".concat(handleSize * 0.25, \"px\"),\n      // for IE11\n      marginRight: \"\".concat(handleSize * 0.25, \"px\"),\n      width: '0px'\n    },\n    rightArrow: {\n      border: \"inset \".concat(handleSize * 0.15, \"px rgba(0,0,0,0)\"),\n      borderLeft: \"\".concat(handleSize * 0.15, \"px solid \").concat(sliderLineColor),\n      height: '0px',\n      marginRight: \"-\".concat(handleSize * 0.25, \"px\"),\n      // for IE11\n      width: '0px'\n    },\n    leftLabel: {\n      background: 'rgba(0, 0, 0, 0.5)',\n      color: 'white',\n      left: '5%',\n      opacity: isSliding ? 0 : 1,\n      padding: '10px 20px',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(0,-50%)',\n      transition: 'opacity 0.1s ease-out'\n    },\n    rightLabel: {\n      background: 'rgba(0, 0, 0, 0.5)',\n      color: 'white',\n      opacity: isSliding ? 0 : 1,\n      padding: '10px 20px',\n      position: 'absolute',\n      right: '5%',\n      top: '50%',\n      transform: 'translate(0,-50%)',\n      transition: 'opacity 0.1s ease-out'\n    }\n  };\n  const allImagesLoaded = rightImgLoaded && leftImgLoaded;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, skeleton && !allImagesLoaded && React.createElement(\"div\", {\n    style: _objectSpread({}, styles.container),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, skeleton), React.createElement(\"div\", {\n    style: _objectSpread({}, styles.container, {\n      display: allImagesLoaded ? 'block' : 'none'\n    }),\n    ref: containerRef,\n    \"data-testid\": \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onLoad: () => setRightImgLoaded(true) // onError={() => this.onError(rightImageRef, rightImage)}\n    ,\n    alt: rightImageAlt,\n    \"data-testid\": \"right-image\",\n    ref: rightImageRef,\n    src: rightImage,\n    style: styles.rightImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    onLoad: () => setLeftImgLoaded(true) // onError={() => this.onError(leftImageRef, leftImage)}\n    ,\n    alt: leftImageAlt,\n    \"data-testid\": \"left-image\",\n    ref: leftImageRef,\n    src: leftImage,\n    style: styles.leftImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: styles.slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.line1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }), handle ? React.createElement(\"div\", {\n    style: styles.handleCustom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, handle) : React.createElement(\"div\", {\n    style: styles.handleDefault,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles.leftArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: styles.rightArrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: styles.line2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  })), leftImageLabel && React.createElement(\"div\", {\n    style: styles.leftLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, leftImageLabel), rightImageLabel && React.createElement(\"div\", {\n    style: styles.rightLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, rightImageLabel)));\n}\n\nReactCompareImage.propTypes = propTypes;\nReactCompareImage.defaultProps = defaultProps;\nexport default ReactCompareImage;","map":{"version":3,"sources":["/Users/crenk/Documents/clients/cox/cox_tech_table/cox_table_app/src/components/Partials/ReactCompareImage.jsx"],"names":["ResizeSensor","PropTypes","React","useEffect","useRef","useState","propTypes","handleSize","number","handle","node","hover","bool","leftImage","string","isRequired","leftImageAlt","leftImageCss","object","leftImageLabel","onSliderPositionChange","func","rightImage","rightImageAlt","rightImageCss","rightImageLabel","skeleton","element","sliderLineColor","sliderLineWidth","sliderPositionPercentage","defaultProps","ReactCompareImage","props","sliderPosition","setSliderPosition","canvasWidth","setCanvasWidth","leftImgLoaded","setLeftImgLoaded","rightImgLoaded","setRightImgLoaded","isSliding","setIsSliding","containerRef","rightImageRef","leftImageRef","alreadyDone","current","complete","getCanvasWidth","getBoundingClientRect","width","containerElement","resizeSensor","detach","handleSliding","event","e","window","cursorXfromViewport","touches","pageX","cursorXfromWindow","pageXOffset","imagePosition","pos","left","minPos","maxPos","startSliding","preventDefault","addEventListener","finishSliding","removeEventListener","styles","container","boxSizing","position","overflow","display","height","clip","objectFit","top","slider","alignItems","cursor","flexDirection","justifyContent","line1","background","flex","line2","handleCustom","handleDefault","borderRadius","leftArrow","border","borderRight","marginLeft","marginRight","rightArrow","borderLeft","leftLabel","color","opacity","padding","transform","transition","rightLabel","right","allImagesLoaded"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEN,SAAS,CAACO,MADN;AAEhBC,EAAAA,MAAM,EAAER,SAAS,CAACS,IAFF;AAGhBC,EAAAA,KAAK,EAAEV,SAAS,CAACW,IAHD;AAIhBC,EAAAA,SAAS,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UAJZ;AAKhBC,EAAAA,YAAY,EAAEf,SAAS,CAACa,MALR;AAMhBG,EAAAA,YAAY,EAAEhB,SAAS,CAACiB,MANR;AAMgB;AAChCC,EAAAA,cAAc,EAAElB,SAAS,CAACa,MAPV;AAQhBM,EAAAA,sBAAsB,EAAEnB,SAAS,CAACoB,IARlB;AAShBC,EAAAA,UAAU,EAAErB,SAAS,CAACa,MAAV,CAAiBC,UATb;AAUhBQ,EAAAA,aAAa,EAAEtB,SAAS,CAACa,MAVT;AAWhBU,EAAAA,aAAa,EAAEvB,SAAS,CAACiB,MAXT;AAWiB;AACjCO,EAAAA,eAAe,EAAExB,SAAS,CAACa,MAZX;AAahBY,EAAAA,QAAQ,EAAEzB,SAAS,CAAC0B,OAbJ;AAchBC,EAAAA,eAAe,EAAE3B,SAAS,CAACa,MAdX;AAehBe,EAAAA,eAAe,EAAE5B,SAAS,CAACO,MAfX;AAgBhBsB,EAAAA,wBAAwB,EAAE7B,SAAS,CAACO;AAhBpB,CAAlB;AAmBA,MAAMuB,YAAY,GAAG;AACnBxB,EAAAA,UAAU,EAAE,EADO;AAEnBE,EAAAA,MAAM,EAAE,IAFW;AAGnBE,EAAAA,KAAK,EAAE,KAHY;AAInBK,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBE,EAAAA,cAAc,EAAE,IANG;AAOnBC,EAAAA,sBAAsB,EAAE,MAAM,CAAE,CAPb;AAQnBG,EAAAA,aAAa,EAAE,EARI;AASnBC,EAAAA,aAAa,EAAE,EATI;AAUnBC,EAAAA,eAAe,EAAE,IAVE;AAWnBC,EAAAA,QAAQ,EAAE,IAXS;AAYnBE,EAAAA,eAAe,EAAE,SAZE;AAanBC,EAAAA,eAAe,EAAE,CAbE;AAcnBC,EAAAA,wBAAwB,EAAE;AAdP,CAArB;;AAiBA,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,QAE9B1B,UAF8B,GAkB5B0B,KAlB4B,CAE9B1B,UAF8B;AAAA,QAG9BE,MAH8B,GAkB5BwB,KAlB4B,CAG9BxB,MAH8B;AAAA,QAI9BE,KAJ8B,GAkB5BsB,KAlB4B,CAI9BtB,KAJ8B;AAAA,QAK9BE,SAL8B,GAkB5BoB,KAlB4B,CAK9BpB,SAL8B;AAAA,QAM9BG,YAN8B,GAkB5BiB,KAlB4B,CAM9BjB,YAN8B;AAAA,QAO9BC,YAP8B,GAkB5BgB,KAlB4B,CAO9BhB,YAP8B;AAAA,QAQ9BE,cAR8B,GAkB5Bc,KAlB4B,CAQ9Bd,cAR8B;AAAA,QAS9BC,sBAT8B,GAkB5Ba,KAlB4B,CAS9Bb,sBAT8B;AAAA,QAU9BE,UAV8B,GAkB5BW,KAlB4B,CAU9BX,UAV8B;AAAA,QAW9BC,aAX8B,GAkB5BU,KAlB4B,CAW9BV,aAX8B;AAAA,QAY9BC,aAZ8B,GAkB5BS,KAlB4B,CAY9BT,aAZ8B;AAAA,QAa9BC,eAb8B,GAkB5BQ,KAlB4B,CAa9BR,eAb8B;AAAA,QAc9BC,QAd8B,GAkB5BO,KAlB4B,CAc9BP,QAd8B;AAAA,QAe9BE,eAf8B,GAkB5BK,KAlB4B,CAe9BL,eAf8B;AAAA,QAgB9BC,eAhB8B,GAkB5BI,KAlB4B,CAgB9BJ,eAhB8B;AAAA,QAiB9BC,wBAjB8B,GAkB5BG,KAlB4B,CAiB9BH,wBAjB8B,EAoBhC;;AApBgC,oBAqBYzB,QAAQ,CAClDyB,wBADkD,CArBpB;AAAA;AAAA,QAqBzBI,cArByB;AAAA,QAqBTC,iBArBS;;AAAA,qBAwBM9B,QAAQ,CAAC,CAAD,CAxBd;AAAA;AAAA,QAwBzB+B,WAxByB;AAAA,QAwBZC,cAxBY;;AAAA,qBAyBUhC,QAAQ,CAAC,KAAD,CAzBlB;AAAA;AAAA,QAyBzBiC,aAzByB;AAAA,QAyBVC,gBAzBU;;AAAA,qBA0BYlC,QAAQ,CAAC,KAAD,CA1BpB;AAAA;AAAA,QA0BzBmC,cA1ByB;AAAA,QA0BTC,iBA1BS;;AAAA,qBA2BEpC,QAAQ,CAAC,KAAD,CA3BV;AAAA;AAAA,QA2BzBqC,SA3ByB;AAAA,QA2BdC,YA3Bc;;AA6BhC,QAAMC,YAAY,GAAGxC,MAAM,EAA3B;AACA,QAAMyC,aAAa,GAAGzC,MAAM,EAA5B;AACA,QAAM0C,YAAY,GAAG1C,MAAM,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAoC,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,IAAAA,cAAc,CAAC,CAAD,CAAd,CAHc,CAId;AACA;;AACA,UAAMU,WAAW,GAAGD,YAAY,CAACE,OAAb,CAAqBC,QAAzC;AACAF,IAAAA,WAAW,IAAIR,gBAAgB,CAAC,IAAD,CAA/B;AACD,GARQ,EAQN,CAAC1B,SAAD,CARM,CAAT;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACAsC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAJ,IAAAA,cAAc,CAAC,CAAD,CAAd,CAHc,CAId;AACA;;AACA,UAAMU,WAAW,GAAGF,aAAa,CAACG,OAAd,CAAsBC,QAA1C;AACAF,IAAAA,WAAW,IAAIN,iBAAiB,CAAC,IAAD,CAAhC;AACD,GARQ,EAQN,CAACnB,UAAD,CARM,CAAT;;AAUA,WAAS4B,cAAT,GAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAb,IAAAA,cAAc,CAACQ,aAAa,CAACG,OAAd,CAAsBG,qBAAtB,GAA8CC,KAA/C,CAAd;AACD;;AAEDjD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMkD,gBAAgB,GAAGT,YAAY,CAACI,OAAtC;AACA,UAAMM,YAAY,GAAG,IAAItD,YAAJ,CAAiBqD,gBAAjB,EAAmC,MAAM;AAC5DH,MAAAA,cAAc;AACf,KAFoB,CAArB;AAGA,WAAO,MAAM;AACXI,MAAAA,YAAY,CAACC,MAAb,CAAoBF,gBAApB;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWAlD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImC,aAAa,IAAIE,cAArB,EAAqC;AACnCU,MAAAA,cAAc;AACf;AACF,GAJQ,EAIN,CAACZ,aAAD,EAAgBE,cAAhB,CAJM,CAAT;;AAMA,WAASgB,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAI,CAACf,SAAL,EAAgBC,YAAY,CAAC,IAAD,CAAZ;AAEhB,UAAMe,CAAC,GAAGD,KAAK,IAAIE,MAAM,CAACF,KAA1B,CAH4B,CAK5B;;AACA,UAAMG,mBAAmB,GAAGF,CAAC,CAACG,OAAF,GAAYH,CAAC,CAACG,OAAF,CAAU,CAAV,EAAaC,KAAzB,GAAiCJ,CAAC,CAACI,KAA/D,CAN4B,CAQ5B;;AACA,UAAMC,iBAAiB,GAAGH,mBAAmB,GAAGD,MAAM,CAACK,WAAvD,CAT4B,CAW5B;;AACA,UAAMC,aAAa,GAAGpB,aAAa,CAACG,OAAd,CAAsBG,qBAAtB,EAAtB;AACA,QAAIe,GAAG,GAAGH,iBAAiB,GAAGE,aAAa,CAACE,IAA5C,CAb4B,CAe5B;;AACA,UAAMC,MAAM,GAAG,IAAIvC,eAAe,GAAG,CAArC;AACA,UAAMwC,MAAM,GAAGjC,WAAW,GAAGP,eAAe,GAAG,CAA/C;AAEA,QAAIqC,GAAG,GAAGE,MAAV,EAAkBF,GAAG,GAAGE,MAAN;AAClB,QAAIF,GAAG,GAAGG,MAAV,EAAkBH,GAAG,GAAGG,MAAN;AAElBlC,IAAAA,iBAAiB,CAAC+B,GAAG,GAAG9B,WAAP,CAAjB,CAtB4B,CAwB5B;;AACA,QAAIhB,sBAAJ,EAA4B;AAC1BA,MAAAA,sBAAsB,CAAC8C,GAAG,GAAG9B,WAAP,CAAtB;AACD;AACF;;AAED,WAASkC,YAAT,CAAsBZ,CAAtB,EAAyB;AACvB;AACA,QAAI,EAAE,aAAaA,CAAf,CAAJ,EAAuB;AACrBA,MAAAA,CAAC,CAACa,cAAF;AACD,KAJsB,CAMvB;;;AACAf,IAAAA,aAAa,CAACE,CAAD,CAAb;AAEAC,IAAAA,MAAM,CAACa,gBAAP,CAAwB,WAAxB,EAAqChB,aAArC,EATuB,CAS8B;;AACrDG,IAAAA,MAAM,CAACa,gBAAP,CAAwB,WAAxB,EAAqChB,aAArC,EAVuB,CAU8B;AACtD;;AAED,WAASiB,aAAT,GAAyB;AACvB9B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAgB,IAAAA,MAAM,CAACe,mBAAP,CAA2B,WAA3B,EAAwClB,aAAxC;AACAG,IAAAA,MAAM,CAACe,mBAAP,CAA2B,WAA3B,EAAwClB,aAAxC;AACD;;AAEDrD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkD,gBAAgB,GAAGT,YAAY,CAACI,OAAtC;;AAEA,QAAIV,aAAa,IAAIE,cAAjB,IAAmCJ,WAAvC,EAAoD;AAClD;AAEA;AACAiB,MAAAA,gBAAgB,CAACmB,gBAAjB,CAAkC,YAAlC,EAAgDF,YAAhD,EAJkD,CAIa;;AAC/DX,MAAAA,MAAM,CAACa,gBAAP,CAAwB,UAAxB,EAAoCC,aAApC,EALkD,CAKE;AAEpD;;AACA,UAAI9D,KAAJ,EAAW;AACT0C,QAAAA,gBAAgB,CAACmB,gBAAjB,CAAkC,WAAlC,EAA+ChB,aAA/C,EADS,CACsD;;AAC/DH,QAAAA,gBAAgB,CAACmB,gBAAjB,CAAkC,YAAlC,EAAgDC,aAAhD,EAFS,CAEuD;AACjE,OAHD,MAGO;AACLpB,QAAAA,gBAAgB,CAACmB,gBAAjB,CAAkC,WAAlC,EAA+CF,YAA/C,EADK,CACyD;;AAC9DX,QAAAA,MAAM,CAACa,gBAAP,CAAwB,SAAxB,EAAmCC,aAAnC,EAFK,CAE8C;AACpD;AACF;;AAED,WAAO,MAAM;AACX;AACApB,MAAAA,gBAAgB,CAACqB,mBAAjB,CAAqC,YAArC,EAAmDJ,YAAnD,EAFW,CAEuD;;AAClEX,MAAAA,MAAM,CAACe,mBAAP,CAA2B,UAA3B,EAAuCD,aAAvC,EAHW,CAG4C;;AACvDpB,MAAAA,gBAAgB,CAACqB,mBAAjB,CAAqC,WAArC,EAAkDlB,aAAlD,EAJW,CAIuD;;AAClEH,MAAAA,gBAAgB,CAACqB,mBAAjB,CAAqC,YAArC,EAAmDD,aAAnD,EALW,CAKwD;;AACnEpB,MAAAA,gBAAgB,CAACqB,mBAAjB,CAAqC,WAArC,EAAkDJ,YAAlD,EANW,CAMsD;;AACjEX,MAAAA,MAAM,CAACe,mBAAP,CAA2B,SAA3B,EAAsCD,aAAtC,EAPW,CAO2C;;AACtDd,MAAAA,MAAM,CAACe,mBAAP,CAA2B,WAA3B,EAAwClB,aAAxC,EARW,CAQ6C;;AACxDG,MAAAA,MAAM,CAACe,mBAAP,CAA2B,WAA3B,EAAwClB,aAAxC,EATW,CAS6C;AACzD,KAVD;AAWD,GA/BQ,EA+BN,CAAClB,aAAD,EAAgBE,cAAhB,EAAgCJ,WAAhC,CA/BM,CAAT,CArIgC,CAoKkB;;AAElD,QAAMuC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,YADF;AAETC,MAAAA,QAAQ,EAAE,UAFD;AAGT1B,MAAAA,KAAK,EAAE,MAHE;AAIT2B,MAAAA,QAAQ,EAAE;AAJD,KADE;AAObzD,IAAAA,UAAU;AACR0D,MAAAA,OAAO,EAAE,OADD;AAERC,MAAAA,MAAM,EAAE,MAFA;AAEQ;AAChB7B,MAAAA,KAAK,EAAE;AAHC,OAIL5B,aAJK,CAPG;AAabX,IAAAA,SAAS;AACPqE,MAAAA,IAAI,uBAAgB9C,WAAW,GAAGF,cAA9B,oBADG;AAEP8C,MAAAA,OAAO,EAAE,OAFF;AAGPC,MAAAA,MAAM,EAAE,MAHD;AAGS;AAChBE,MAAAA,SAAS,EAAE,OAJJ;AAIa;AACpBL,MAAAA,QAAQ,EAAE,UALH;AAMPM,MAAAA,GAAG,EAAE,CANE;AAOPhC,MAAAA,KAAK,EAAE;AAPA,OAQJnC,YARI,CAbI;AAuBboE,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE,QADN;AAENC,MAAAA,MAAM,EAAE,CAAC5E,KAAD,IAAU,WAFZ;AAGNqE,MAAAA,OAAO,EAAE,MAHH;AAINQ,MAAAA,aAAa,EAAE,QAJT;AAKNP,MAAAA,MAAM,EAAE,MALF;AAMNQ,MAAAA,cAAc,EAAE,QANV;AAONtB,MAAAA,IAAI,YAAK/B,WAAW,GAAGF,cAAd,GAA+B3B,UAAU,GAAG,CAAjD,OAPE;AAQNuE,MAAAA,QAAQ,EAAE,UARJ;AASNM,MAAAA,GAAG,EAAE,CATC;AAUNhC,MAAAA,KAAK,YAAK7C,UAAL;AAVC,KAvBK;AAmCbmF,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,mCADP;AAELC,MAAAA,IAAI,EAAE,UAFD;AAGLX,MAAAA,MAAM,EAAE,MAHH;AAIL7B,MAAAA,KAAK,EAAE;AAJF,KAnCM;AAyCbyC,IAAAA,KAAK,EAAE;AACLF,MAAAA,UAAU,EAAE,mCADP;AAELC,MAAAA,IAAI,EAAE,UAFD;AAGLX,MAAAA,MAAM,EAAE,MAHH;AAIL7B,MAAAA,KAAK,EAAE;AAJF,KAzCM;AA+Cb0C,IAAAA,YAAY,EAAE;AACZR,MAAAA,UAAU,EAAE,QADA;AAEZT,MAAAA,SAAS,EAAE,YAFC;AAGZG,MAAAA,OAAO,EAAE,MAHG;AAIZY,MAAAA,IAAI,EAAE,UAJM;AAKZX,MAAAA,MAAM,EAAE,MALI;AAMZQ,MAAAA,cAAc,EAAE,QANJ;AAOZrC,MAAAA,KAAK,EAAE;AAPK,KA/CD;AAwDb2C,IAAAA,aAAa,EAAE;AACbT,MAAAA,UAAU,EAAE,QADC;AAEbU,MAAAA,YAAY,EAAE,MAFD;AAGbL,MAAAA,UAAU,EAAE,4CAHC;AAIbd,MAAAA,SAAS,EAAE,YAJE;AAKbG,MAAAA,OAAO,EAAE,MALI;AAMbY,MAAAA,IAAI,EAAE,UANO;AAObX,MAAAA,MAAM,YAAK1E,UAAL,OAPO;AAQbkF,MAAAA,cAAc,EAAE,QARH;AASbrC,MAAAA,KAAK,YAAK7C,UAAL;AATQ,KAxDF;AAmEb0F,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,kBAAW3F,UAAU,GAAG,IAAxB,qBADG;AAET4F,MAAAA,WAAW,YAAK5F,UAAU,GAAG,IAAlB,sBAAkCqB,eAAlC,CAFF;AAGTqD,MAAAA,MAAM,EAAE,KAHC;AAITmB,MAAAA,UAAU,aAAM7F,UAAU,GAAG,IAAnB,OAJD;AAI8B;AACvC8F,MAAAA,WAAW,YAAK9F,UAAU,GAAG,IAAlB,OALF;AAMT6C,MAAAA,KAAK,EAAE;AANE,KAnEE;AA2EbkD,IAAAA,UAAU,EAAE;AACVJ,MAAAA,MAAM,kBAAW3F,UAAU,GAAG,IAAxB,qBADI;AAEVgG,MAAAA,UAAU,YAAKhG,UAAU,GAAG,IAAlB,sBAAkCqB,eAAlC,CAFA;AAGVqD,MAAAA,MAAM,EAAE,KAHE;AAIVoB,MAAAA,WAAW,aAAM9F,UAAU,GAAG,IAAnB,OAJD;AAI8B;AACxC6C,MAAAA,KAAK,EAAE;AALG,KA3EC;AAkFboD,IAAAA,SAAS,EAAE;AACTb,MAAAA,UAAU,EAAE,oBADH;AAETc,MAAAA,KAAK,EAAE,OAFE;AAGTtC,MAAAA,IAAI,EAAE,IAHG;AAITuC,MAAAA,OAAO,EAAEhE,SAAS,GAAG,CAAH,GAAO,CAJhB;AAKTiE,MAAAA,OAAO,EAAE,WALA;AAMT7B,MAAAA,QAAQ,EAAE,UAND;AAOTM,MAAAA,GAAG,EAAE,KAPI;AAQTwB,MAAAA,SAAS,EAAE,mBARF;AASTC,MAAAA,UAAU,EAAE;AATH,KAlFE;AA6FbC,IAAAA,UAAU,EAAE;AACVnB,MAAAA,UAAU,EAAE,oBADF;AAEVc,MAAAA,KAAK,EAAE,OAFG;AAGVC,MAAAA,OAAO,EAAEhE,SAAS,GAAG,CAAH,GAAO,CAHf;AAIViE,MAAAA,OAAO,EAAE,WAJC;AAKV7B,MAAAA,QAAQ,EAAE,UALA;AAMViC,MAAAA,KAAK,EAAE,IANG;AAOV3B,MAAAA,GAAG,EAAE,KAPK;AAQVwB,MAAAA,SAAS,EAAE,mBARD;AASVC,MAAAA,UAAU,EAAE;AATF;AA7FC,GAAf;AA0GA,QAAMG,eAAe,GAAGxE,cAAc,IAAIF,aAA1C;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QAAQ,IAAI,CAACsF,eAAb,IACC;AAAK,IAAA,KAAK,oBAAOrC,MAAM,CAACC,SAAd,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsClD,QAAtC,CAFJ,EAKE;AACE,IAAA,KAAK,oBACAiD,MAAM,CAACC,SADP;AAEHI,MAAAA,OAAO,EAAEgC,eAAe,GAAG,OAAH,GAAa;AAFlC,MADP;AAKE,IAAA,GAAG,EAAEpE,YALP;AAME,mBAAY,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,MAAM,EAAE,MAAMH,iBAAiB,CAAC,IAAD,CADjC,CAEE;AAFF;AAGE,IAAA,GAAG,EAAElB,aAHP;AAIE,mBAAY,aAJd;AAKE,IAAA,GAAG,EAAEsB,aALP;AAME,IAAA,GAAG,EAAEvB,UANP;AAOE,IAAA,KAAK,EAAEqD,MAAM,CAACrD,UAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBE;AACE,IAAA,MAAM,EAAE,MAAMiB,gBAAgB,CAAC,IAAD,CADhC,CAEE;AAFF;AAGE,IAAA,GAAG,EAAEvB,YAHP;AAIE,mBAAY,YAJd;AAKE,IAAA,GAAG,EAAE8B,YALP;AAME,IAAA,GAAG,EAAEjC,SANP;AAOE,IAAA,KAAK,EAAE8D,MAAM,CAAC9D,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EA0BE;AAAK,IAAA,KAAK,EAAE8D,MAAM,CAACU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEV,MAAM,CAACe,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGjF,MAAM,GACL;AAAK,IAAA,KAAK,EAAEkE,MAAM,CAACmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCrF,MAAlC,CADK,GAGL;AAAK,IAAA,KAAK,EAAEkE,MAAM,CAACoB,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEpB,MAAM,CAACsB,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,KAAK,EAAEtB,MAAM,CAAC2B,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALJ,EAUE;AAAK,IAAA,KAAK,EAAE3B,MAAM,CAACkB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CA1BF,EAuCG1E,cAAc,IAAI;AAAK,IAAA,KAAK,EAAEwD,MAAM,CAAC6B,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BrF,cAA/B,CAvCrB,EAwCGM,eAAe,IACd;AAAK,IAAA,KAAK,EAAEkD,MAAM,CAACmC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrF,eAAhC,CAzCJ,CALF,CADF;AAoDD;;AAEDO,iBAAiB,CAAC1B,SAAlB,GAA8BA,SAA9B;AACA0B,iBAAiB,CAACD,YAAlB,GAAiCA,YAAjC;AAEA,eAAeC,iBAAf","sourcesContent":["import { ResizeSensor } from 'css-element-queries';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst propTypes = {\n  handleSize: PropTypes.number,\n  handle: PropTypes.node,\n  hover: PropTypes.bool,\n  leftImage: PropTypes.string.isRequired,\n  leftImageAlt: PropTypes.string,\n  leftImageCss: PropTypes.object, // eslint-disable-line\n  leftImageLabel: PropTypes.string,\n  onSliderPositionChange: PropTypes.func,\n  rightImage: PropTypes.string.isRequired,\n  rightImageAlt: PropTypes.string,\n  rightImageCss: PropTypes.object, // eslint-disable-line\n  rightImageLabel: PropTypes.string,\n  skeleton: PropTypes.element,\n  sliderLineColor: PropTypes.string,\n  sliderLineWidth: PropTypes.number,\n  sliderPositionPercentage: PropTypes.number,\n};\n\nconst defaultProps = {\n  handleSize: 40,\n  handle: null,\n  hover: false,\n  leftImageAlt: '',\n  leftImageCss: {},\n  leftImageLabel: null,\n  onSliderPositionChange: () => {},\n  rightImageAlt: '',\n  rightImageCss: {},\n  rightImageLabel: null,\n  skeleton: null,\n  sliderLineColor: '#ffffff',\n  sliderLineWidth: 2,\n  sliderPositionPercentage: 0.5,\n};\n\nfunction ReactCompareImage(props) {\n  const {\n    handleSize,\n    handle,\n    hover,\n    leftImage,\n    leftImageAlt,\n    leftImageCss,\n    leftImageLabel,\n    onSliderPositionChange,\n    rightImage,\n    rightImageAlt,\n    rightImageCss,\n    rightImageLabel,\n    skeleton,\n    sliderLineColor,\n    sliderLineWidth,\n    sliderPositionPercentage,\n  } = props;\n\n  // 0 to 1\n  const [sliderPosition, setSliderPosition] = useState(\n    sliderPositionPercentage,\n  );\n  const [canvasWidth, setCanvasWidth] = useState(0);\n  const [leftImgLoaded, setLeftImgLoaded] = useState(false);\n  const [rightImgLoaded, setRightImgLoaded] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n\n  const containerRef = useRef();\n  const rightImageRef = useRef();\n  const leftImageRef = useRef();\n\n  useEffect(() => {\n    // when the left image source is changed\n    setLeftImgLoaded(false);\n    setCanvasWidth(0);\n    // consider the case where loading image is completed immediately\n    // due to the cache etc.\n    const alreadyDone = leftImageRef.current.complete;\n    alreadyDone && setLeftImgLoaded(true);\n  }, [leftImage]);\n\n  useEffect(() => {\n    // when the right image source is changed\n    setRightImgLoaded(false);\n    setCanvasWidth(0);\n    // consider the case where loading image is completed immediately\n    // due to the cache etc.\n    const alreadyDone = rightImageRef.current.complete;\n    alreadyDone && setRightImgLoaded(true);\n  }, [rightImage]);\n\n  function getCanvasWidth() {\n    // Image size set as follows.\n    //\n    // 1. right(under) image:\n    //     width  = 100% of container width\n    //     height = auto\n    //\n    // 2. left(over) imaze:\n    //     width  = 100% of container width\n    //     height = right image's height\n    //              (protrudes is hidden by css 'object-fit: hidden')\n    setCanvasWidth(rightImageRef.current.getBoundingClientRect().width);\n  }\n\n  useEffect(() => {\n    // re-calculate canvas size when container element size is changed\n    const containerElement = containerRef.current;\n    const resizeSensor = new ResizeSensor(containerElement, () => {\n      getCanvasWidth();\n    });\n    return () => {\n      resizeSensor.detach(containerElement);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (leftImgLoaded && rightImgLoaded) {\n      getCanvasWidth();\n    }\n  }, [leftImgLoaded, rightImgLoaded]);\n\n  function handleSliding(event) {\n    if (!isSliding) setIsSliding(true);\n\n    const e = event || window.event;\n\n    // Calc Cursor Position from the left edge of the viewport\n    const cursorXfromViewport = e.touches ? e.touches[0].pageX : e.pageX;\n\n    // Calc Cursor Position from the left edge of the window (consider any page scrolling)\n    const cursorXfromWindow = cursorXfromViewport - window.pageXOffset;\n\n    // Calc Cursor Position from the left edge of the image\n    const imagePosition = rightImageRef.current.getBoundingClientRect();\n    let pos = cursorXfromWindow - imagePosition.left;\n\n    // Set minimum and maximum values to prevent the slider from overflowing\n    const minPos = 0 + sliderLineWidth / 2;\n    const maxPos = canvasWidth - sliderLineWidth / 2;\n\n    if (pos < minPos) pos = minPos;\n    if (pos > maxPos) pos = maxPos;\n\n    setSliderPosition(pos / canvasWidth);\n\n    // If there's a callback function, invoke it everytime the slider changes\n    if (onSliderPositionChange) {\n      onSliderPositionChange(pos / canvasWidth);\n    }\n  }\n\n  function startSliding(e) {\n    // Prevent default behavior other than mobile scrolling\n    if (!('touches' in e)) {\n      e.preventDefault();\n    }\n\n    // Slide the image even if you just click or tap (not drag)\n    handleSliding(e);\n\n    window.addEventListener('mousemove', handleSliding); // 07\n    window.addEventListener('touchmove', handleSliding); // 08\n  }\n\n  function finishSliding() {\n    setIsSliding(false);\n    window.removeEventListener('mousemove', handleSliding);\n    window.removeEventListener('touchmove', handleSliding);\n  }\n\n  useEffect(() => {\n    const containerElement = containerRef.current;\n\n    if (leftImgLoaded && rightImgLoaded && canvasWidth) {\n      // it's necessary to reset event handlers each time the canvasWidth changes\n\n      // for mobile\n      containerElement.addEventListener('touchstart', startSliding); // 01\n      window.addEventListener('touchend', finishSliding); // 02\n\n      // for desktop\n      if (hover) {\n        containerElement.addEventListener('mousemove', handleSliding); // 03\n        containerElement.addEventListener('mouseleave', finishSliding); // 04\n      } else {\n        containerElement.addEventListener('mousedown', startSliding); // 05\n        window.addEventListener('mouseup', finishSliding); // 06\n      }\n    }\n\n    return () => {\n      // cleanup all event resteners\n      containerElement.removeEventListener('touchstart', startSliding); // 01\n      window.removeEventListener('touchend', finishSliding); // 02\n      containerElement.removeEventListener('mousemove', handleSliding); // 03\n      containerElement.removeEventListener('mouseleave', finishSliding); // 04\n      containerElement.removeEventListener('mousedown', startSliding); // 05\n      window.removeEventListener('mouseup', finishSliding); // 06\n      window.removeEventListener('mousemove', handleSliding); // 07\n      window.removeEventListener('touchmove', handleSliding); // 08\n    };\n  }, [leftImgLoaded, rightImgLoaded, canvasWidth]); // eslint-disable-line\n\n  const styles = {\n    container: {\n      boxSizing: 'border-box',\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    rightImage: {\n      display: 'block',\n      height: 'auto', // Respect the aspect ratio\n      width: '100%',\n      ...rightImageCss,\n    },\n    leftImage: {\n      clip: `rect(auto, ${canvasWidth * sliderPosition}px, auto, auto)`,\n      display: 'block',\n      height: '100%', // fit to the height of right(under) image\n      objectFit: 'cover', // protrudes is hidden\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      ...leftImageCss,\n    },\n    slider: {\n      alignItems: 'center',\n      cursor: !hover && 'ew-resize',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      justifyContent: 'center',\n      left: `${canvasWidth * sliderPosition - handleSize / 2}px`,\n      position: 'absolute',\n      top: 0,\n      width: `${handleSize}px`,\n    },\n    line1: {\n      background: 'linear-gradient(#00aaf4, #00bea4)',\n      flex: '0 1 auto',\n      height: '100%',\n      width: '1px',\n    },\n    line2: {\n      background: 'linear-gradient(#00bea4, #00d258)',\n      flex: '0 1 auto',\n      height: '100%',\n      width: '1px',\n    },\n    handleCustom: {\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: '1 0 auto',\n      height: 'auto',\n      justifyContent: 'center',\n      width: 'auto',\n    },\n    handleDefault: {\n      alignItems: 'center',\n      borderRadius: '100%',\n      background: 'linear-gradient(135deg, #00aaf4 , #00d258)',\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: '1 0 auto',\n      height: `${handleSize}px`,\n      justifyContent: 'center',\n      width: `${handleSize}px`,\n    },\n    leftArrow: {\n      border: `inset ${handleSize * 0.15}px rgba(0,0,0,0)`,\n      borderRight: `${handleSize * 0.15}px solid ${sliderLineColor}`,\n      height: '0px',\n      marginLeft: `-${handleSize * 0.25}px`, // for IE11\n      marginRight: `${handleSize * 0.25}px`,\n      width: '0px',\n    },\n    rightArrow: {\n      border: `inset ${handleSize * 0.15}px rgba(0,0,0,0)`,\n      borderLeft: `${handleSize * 0.15}px solid ${sliderLineColor}`,\n      height: '0px',\n      marginRight: `-${handleSize * 0.25}px`, // for IE11\n      width: '0px',\n    },\n    leftLabel: {\n      background: 'rgba(0, 0, 0, 0.5)',\n      color: 'white',\n      left: '5%',\n      opacity: isSliding ? 0 : 1,\n      padding: '10px 20px',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(0,-50%)',\n      transition: 'opacity 0.1s ease-out',\n    },\n    rightLabel: {\n      background: 'rgba(0, 0, 0, 0.5)',\n      color: 'white',\n      opacity: isSliding ? 0 : 1,\n      padding: '10px 20px',\n      position: 'absolute',\n      right: '5%',\n      top: '50%',\n      transform: 'translate(0,-50%)',\n      transition: 'opacity 0.1s ease-out',\n    },\n  };\n\n  const allImagesLoaded = rightImgLoaded && leftImgLoaded;\n\n  return (\n    <React.Fragment>\n      {skeleton && !allImagesLoaded && (\n        <div style={{ ...styles.container }}>{skeleton}</div>\n      )}\n\n      <div\n        style={{\n          ...styles.container,\n          display: allImagesLoaded ? 'block' : 'none',\n        }}\n        ref={containerRef}\n        data-testid=\"container\"\n      >\n        <img\n          onLoad={() => setRightImgLoaded(true)}\n          // onError={() => this.onError(rightImageRef, rightImage)}\n          alt={rightImageAlt}\n          data-testid=\"right-image\"\n          ref={rightImageRef}\n          src={rightImage}\n          style={styles.rightImage}\n        />\n        <img\n          onLoad={() => setLeftImgLoaded(true)}\n          // onError={() => this.onError(leftImageRef, leftImage)}\n          alt={leftImageAlt}\n          data-testid=\"left-image\"\n          ref={leftImageRef}\n          src={leftImage}\n          style={styles.leftImage}\n        />\n        <div style={styles.slider}>\n          <div style={styles.line1} />\n          {handle ? (\n            <div style={styles.handleCustom}>{handle}</div>\n          ) : (\n            <div style={styles.handleDefault}>\n              <div style={styles.leftArrow} />\n              <div style={styles.rightArrow} />\n            </div>\n          )}\n          <div style={styles.line2} />\n        </div>\n        {/* labels */}\n        {leftImageLabel && <div style={styles.leftLabel}>{leftImageLabel}</div>}\n        {rightImageLabel && (\n          <div style={styles.rightLabel}>{rightImageLabel}</div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nReactCompareImage.propTypes = propTypes;\nReactCompareImage.defaultProps = defaultProps;\n\nexport default ReactCompareImage;\n"]},"metadata":{},"sourceType":"module"}