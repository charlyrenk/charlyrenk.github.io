{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactJplayerUtils = require('react-jplayer-utils');\n\nvar _recompose = require('recompose');\n\nvar _actions = require('../../actions/actions');\n\nvar _playbackRateBar = require('./playbackRateBar');\n\nvar _playbackRateBar2 = _interopRequireDefault(_playbackRateBar);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar mapStateToProps = function mapStateToProps(_ref, _ref2) {\n  var jPlayers = _ref.jPlayers;\n  var id = _ref2.id;\n  return {\n    verticalPlaybackRate: jPlayers[id].verticalPlaybackRate,\n    minPlaybackRate: jPlayers[id].minPlaybackRate,\n    maxPlaybackRate: jPlayers[id].maxPlaybackRate\n  };\n};\n\nvar handlers = {\n  movePlaybackRate: function movePlaybackRate(props) {\n    return function (bar, e) {\n      var offset = (0, _reactJplayerUtils.getElementOffset)(bar);\n      var w = bar.getBoundingClientRect().width;\n      var h = bar.getBoundingClientRect().height;\n      var x = e.clientX - offset.left;\n      var y = h - e.clientY + offset.top;\n      var ratio = void 0;\n\n      if (props.verticalPlaybackRate) {\n        ratio = y / h;\n      } else {\n        ratio = x / w;\n      }\n\n      var playbackRate = ratio * (props.maxPlaybackRate - props.minPlaybackRate) + props.minPlaybackRate;\n      props.setOption(props.id, 'playbackRate', playbackRate);\n    };\n  }\n};\nvar secondHandlers = {\n  clickMoveBar: function clickMoveBar(props) {\n    return function (bar, e) {\n      return props.movePlaybackRate(bar, e);\n    };\n  },\n  touchMoveBar: function touchMoveBar(props) {\n    return function (bar, e) {\n      // Stop page scrolling\n      e.preventDefault();\n      props.movePlaybackRate(bar, e.touches[0]);\n    };\n  }\n};\nexports.default = (0, _recompose.compose)((0, _reactJplayerUtils.connectWithId)(mapStateToProps, {\n  setOption: _actions.setOption\n}), (0, _recompose.withHandlers)(handlers), (0, _recompose.withHandlers)(secondHandlers))(_playbackRateBar2.default);","map":null,"metadata":{},"sourceType":"script"}